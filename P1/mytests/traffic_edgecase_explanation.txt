[address:port:count]
[01:0:0]
[01:0:0][02:1:0]
[01:0:0][02:1:0][03:2:0]
[01:0:0][02:1:0][03:2:0][04:0:0]		
[02:1:0][03:2:0][04:0:0][05:1:0][01:0:1]	
# Add five entries
# Change port of entry 01 to eth1 and test to see if the entry is correct
[02:1:0][03:2:0][04:0:0][05:1:0][01:1:1]
[02:1:0][03:2:0][04:0:0][05:1:0][01:1:2]
# Increase the traffic count of all other entries to 3
........................................
........................................
[01:1:2][02:1:3][03:2:3][04:0:3][05:1:3]
# If a new entry is introduced entry 01 should be dropped
[06:2:0][02:1:3][03:2:3][04:0:3][05:1:3]
[07:1:0][02:1:3][03:2:3][04:0:3][05:1:3]
# Add the traffic count for entry 7 to 4
[02:1:3][03:2:3][04:0:3][05:1:3][07:1:4]
# If a new entry is added entry 02 should be dropped and entry 07 should remained
[08:1:0][03:2:3][04:0:3][05:1:3][07:1:5]

Expected Scenario
packet 01, ff
in 0, out 1,2

packet 02, ff
in 1, out 0,2

packet 03, ff
in 2, out 0,1

packet 04, switch
in 0, timeout 1

packet 05, 01
in 1, out 0

packet 01, switch
in 1, timeout 1

packet 05, 01
in 1, out 1

packet 01, 02
in 1, out 1

packet 01, 02
in 1, out 1

packet 01, 02
in 1, out 1

packet 01, 03
in 1, out 2

packet 01, 03
in 1, out 2

packet 01, 03
in 1, out 2

packet 01, 04
in 1, out 0

packet 01, 04
in 1, out 0

packet 01, 04
in 1, out 0

packet 01, 05
in 1, out 1

packet 01, 05
in 1, out 1

packet 01, 05
in 1, out 1

packet 06, 01
in 2, out 0,1

packet 07, 01
in 1, out 0,2

packet 04, 07
in 0, out 1

packet 04, 07
in 0, out 1

packet 04, 07
in 0, out 1

packet 04, 07
in 0, out 1

packet 08, 07
in 1, out 1